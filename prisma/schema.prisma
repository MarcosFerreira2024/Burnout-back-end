// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id       String        @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  password String
  status   Boolean       @default(false)
  email    String        @unique
  fav      favoritos[]
  comments comentarios[]
  code     code?

  @@map("Users")
}

model favoritos {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  productId String   @db.ObjectId
  user      users    @relation(fields: [userId], references: [id])
  product   produtos @relation(fields: [productId], references: [id])

  @@map("Favoritos")
}

model produtos {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  size      String
  colorName String
  colorHex  String
  rating    String
  slug      String        @unique
  frete     String
  category  String[]
  price     Int
  fav       favoritos[]
  comments  comentarios[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@map("Produtos")
}

model comentarios {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  comment    String
  produtosId String   @db.ObjectId
  userId     String   @db.ObjectId
  user       users    @relation(fields: [userId], references: [id])
  produto    produtos @relation(fields: [produtosId], references: [id])
  likes      Int
  deslikes   Int
  response   String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("Comentarios")
}

model code {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  used      Boolean  @default(false)
  userId    String   @unique @db.ObjectId
  user      users    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("Codes")
}
